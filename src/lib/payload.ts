import { subtle } from "crypto";

const base =
  "W3sicXVlcnkiOiJxdWVyeSBjb21tZW50cygkZmlsdGVyOiBDb21tZW50RmlsdGVyISwgJGxpbWl0OiBJbnQsICRwYWdlOiBJbnQsICRyZXBsaWVzUHJldmlldzogQm9vbGVhbiA9IGZhbHNlKSB7ICBjb21tZW50cyhmaWx0ZXI6ICRmaWx0ZXIsIGxpbWl0OiAkbGltaXQsIHBhZ2U6ICRwYWdlKSB7ICAgIGl0ZW1zIHsgICAgICAuLi5jb21tZW50RmllbGRzICAgICAgcmVwbHlDb3VudCBAaW5jbHVkZShpZjogJHJlcGxpZXNQcmV2aWV3KSAgICAgIHJlcGxpZXNOb3RTZWVuQnlDdXJyZW50VXNlckNvdW50ICAgICAgcmVwbGllc1ByZXZpZXcgQGluY2x1ZGUoaWY6ICRyZXBsaWVzUHJldmlldykgeyAgICAgICAgLi4uY29tbWVudEZpZWxkcyAgICAgIH0gICAgfSAgICBwYWdpbmF0aW9uIHsgICAgICAuLi5wYWdpbmF0aW9uRmllbGRzICAgIH0gIH19ICAgICAgICBmcmFnbWVudCBjb21tZW50RmllbGRzIG9uIENvbW1lbnQgeyAgY29tbWVudElkICBtYWluQ29tbWVudElkICB0aHJlYWRJZCAgdXJsICBwcmVwYXJlZEh0bWxDb250ZW50ICB1c2VyIHsgICAgLi4udXNlck1lZGl1bUF2YXRhckZpZWxkcyAgICAuLi51c2VyTmFtZUZpZWxkcyAgICAuLi51c2VyUGVyc29uYUZpZWxkcyAgICB0aXRsZSAgICBiZXN0QmFkZ2UgeyAgICAgIC4uLmJhZGdlRmllbGRzICAgIH0gIH0gIHJlYWN0aW9uQ291bnRzIHsgICAgdHlwZSAgICBjb3VudCAgfSAgZGVsZXRhYmxlICBjdXJyZW50VXNlclJlYWN0aW9uIHsgICAgdHlwZSAgfSAgd2FzRWRpdGVkICByZXBvcnRlZCAgcmVwb3J0YWJsZSAgc291cmNlICBzdGF0dXMgIGNyZWF0ZWRBdCAgY3JlYXRlZEF0VHMgIHVwZGF0ZWRBdCAgaWdub3JlZCAgcG9wdWxhciAgaXNQaW5uZWQgIGRlbGV0ZWRCeSB7ICAgIHVzZXJuYW1lICB9ICBub3RlcyB7ICAgIGNvbnRlbnQgICAgY3JlYXRlZEF0ICAgIHVzZXIgeyAgICAgIHVzZXJuYW1lICAgIH0gIH0gIHBhcmVudFJlcGx5IHsgICAgY29tbWVudElkICAgIGlzUmVwbHkgICAgdXNlciB7ICAgICAgLi4udXNlck5hbWVGaWVsZHMgICAgfSAgfSAgaXNSZXBseSAgaXNOb3RTZWVuQnlDdXJyZW50VXNlcn0gICAgICAgIGZyYWdtZW50IHVzZXJNZWRpdW1BdmF0YXJGaWVsZHMgb24gVXNlciB7ICB1c2VySWQgIGlzRGVsZXRlZE9yUGVuZGluZ0RlbGV0aW9uICBpbWFnZVVybHMoc2xvdDogXCJkZWZhdWx0XCIsIHZhcmlhdGlvbnM6IFtcInVzZXJfc21hbGxfYXZhdGFyXCJdKX0gICAgICAgIGZyYWdtZW50IHVzZXJOYW1lRmllbGRzIG9uIFVzZXIgeyAgdXNlcklkICB1c2VybmFtZSAgaXNVc2VyUHJvZmlsZUhpZGRlbiAgaXNEZWxldGVkT3JQZW5kaW5nRGVsZXRpb259ICAgICAgICBmcmFnbWVudCB1c2VyUGVyc29uYUZpZWxkcyBvbiBVc2VyIHsgIHBlcnNvbmEgeyAgICB0eXBlICAgIHRleHQgIH19ICAgICAgICBmcmFnbWVudCBiYWRnZUZpZWxkcyBvbiBCYWRnZSB7ICBiYWRnZUlkICBsZXZlbCB7ICAgIC4uLmJhZGdlTGV2ZWxGaWVsZHMgIH19ICAgICAgICBmcmFnbWVudCBiYWRnZUxldmVsRmllbGRzIG9uIEJhZGdlTGV2ZWwgeyAga2V5ICBuYW1lICBkZXNjcmlwdGlvbn0gICAgICAgIGZyYWdtZW50IHBhZ2luYXRpb25GaWVsZHMgb24gUGFnaW5hdGlvbiB7ICBjb3VudCAgY3VycmVudCAgbGFzdCAgbmV4dCAgcHJldmlvdXMgIHNpemUgIG9yZGVyICBvcmRlckJ5fSIsInZhcmlhYmxlcyI6eyJmaWx0ZXIiOnsidGhyZWFkSWQiOnsiZXEiOiIxMDU2Mzc5In0sIm9yZGVyIjp7ImJ5IjoiYXBwcm92ZWRfYXQiLCJkaXJlY3Rpb24iOiJBc2NlbmRpbmcifX0sInBhZ2UiOjM1NCwicmVwbGllc1ByZXZpZXciOnRydWV9fSx7InF1ZXJ5IjoicXVlcnkgY29tbWVudFNldHRpbmdzKCRzY29wZTogSUQhLCAkY29tbWVudHM6IEJvb2xlYW4gPSBmYWxzZSwgJGZvcm06IEJvb2xlYW4gPSBmYWxzZSwgJGFkbWluVG9vbHM6IEJvb2xlYW4gPSBmYWxzZSkgeyAgZmVhdHVyZXMgeyAgICBjb21tZW50Rm9ybShzY29wZTogJHNjb3BlKSB7ICAgICAgLi4uY29tbWVudEZlYXR1cmVzIEBpbmNsdWRlKGlmOiAkY29tbWVudHMpICAgICAgLi4uY29tbWVudEZvcm1GZWF0dXJlcyBAaW5jbHVkZShpZjogJGZvcm0pICAgIH0gICAgYWRtaW5Ub29scyhzY29wZTogXCJjb21tZW50XCIpIEBpbmNsdWRlKGlmOiAkYWRtaW5Ub29scykgeyAgICAgIC4uLmNvbW1lbnRBZG1pbkZlYXR1cmVzICAgIH0gIH0gIHNldHRpbmdzIHsgICAgYXBwbGljYXRpb24geyAgICAgIGFwcFN0b3JlIEBpbmNsdWRlKGlmOiAkY29tbWVudHMpICAgICAgcmVDYXB0Y2hhMktleTogcmVDYXB0Y2hhKHZlcnNpb246IDEpIEBpbmNsdWRlKGlmOiAkZm9ybSkgICAgfSAgfX0gICAgICAgIGZyYWdtZW50IGNvbW1lbnRGZWF0dXJlcyBvbiBDb21tZW50Rm9ybUZlYXR1cmVzIHsgIHBlcm1hbGluayAgaXNzdWVSZXBvcnRpbmd9ICAgICAgICBmcmFnbWVudCBjb21tZW50Rm9ybUZlYXR1cmVzIG9uIENvbW1lbnRGb3JtRmVhdHVyZXMgeyAgc3Vic2NyaWJlICByZUNhcHRjaGEgIHd5c2l3eWcgeyAgICBodG1sICAgIGV4cGFuZCAgICBib2xkICAgIGl0YWxpYyAgICBzdHJpa2UgICAgYmxvY2txdW90ZSAgfX0gICAgICAgIGZyYWdtZW50IGNvbW1lbnRBZG1pbkZlYXR1cmVzIG9uIEFkbWluVG9vbEZlYXR1cmVzIHsgIGRlbGV0YWJsZSAgZGVtb3RlQ29tbWVudCAgZGlyZWN0TWVzc2FnZSAgZWRpdGFibGUgIGVuYWJsZWQgIGV4cGFuZGVkICBpbXBvc2VJbmZyYWN0aW9ucyAgaW5zcGVjdFVzZXIgIG1vZGVyYXRlICBwcm9tb3RlQ29tbWVudCAgc2VlRGVsZXRlZCAgc2hvd0NvdW50cnkgIHNwYW1SZXBvcnR9IiwidmFyaWFibGVzIjp7InNjb3BlIjoiMTA1NjM3OSIsImNvbW1lbnRzIjp0cnVlLCJmb3JtIjp0cnVlLCJhZG1pblRvb2xzIjp0cnVlfX0seyJxdWVyeSI6InF1ZXJ5IG5ld0NvbW1lbnRzKCRzY29wZTogSUQhLCAkbGltaXQ6IEludCkgeyAgbmV3Q29tbWVudHModGhyZWFkSWQ6ICRzY29wZSwgbGltaXQ6ICRsaW1pdCkgeyAgICBwYWdlICAgIGNvdW50ICAgIGxhdGVzdCAgfX0iLCJ2YXJpYWJsZXMiOnsic2NvcGUiOiIxMDU2Mzc5In19LHsicXVlcnkiOiJxdWVyeSBjdXJyZW50VXNlckF2YXRhcigkdmFyaWF0aW9uczogW1N0cmluZyFdISkgeyAgbWUgeyAgICB1c2VySWQgICAgaW1hZ2VVcmxzKHNsb3Q6IFwiZGVmYXVsdFwiLCB2YXJpYXRpb25zOiAkdmFyaWF0aW9ucykgIH19IiwidmFyaWFibGVzIjp7InZhcmlhdGlvbnMiOlsidXNlcl9zbWFsbF9hdmF0YXIiXX19XQ==";

export class Payload {
  private payload: [{ variables: { page: number } }];

  constructor(private page: number) {
    this.payload = JSON.parse(atob(base));
    this.setPage();
  }

  public async generateParameter() {
    const encoded = new TextEncoder().encode(JSON.stringify(this.payload));
    const digest = await subtle.digest("SHA-256", encoded);
    return Array.from(new Uint8Array(digest))
      .map((t) => t.toString(16).padStart(2, "0"))
      .join("");
  }

  private setPage() {
    this.payload[0].variables.page = this.page;
  }
}
